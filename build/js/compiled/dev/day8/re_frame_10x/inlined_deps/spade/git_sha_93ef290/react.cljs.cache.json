["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Object",["^ ","~$createContext",["^ "]]],"~:use-macros",["^ ","~$*style-container*","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.runtime","~$IStyleContainer","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.container"],"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react","~:imports",null,"~:requires",["^ ","~$react","^@","^9","^9","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.container.alternate","^A","~$dom","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.container.dom","^C","^C","^7","^7"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","^6","^7","~$->AlternateStyleContainer","^A","^8","^9"],"~:defs",["^ ","~$context",["^ ","^<","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react/context","~:file","resources/public/js/compiled/dev/day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/react.cljs","~:line",8,"~:column",1,"~:end-line",8,"~:end-column",17,"~:meta",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/react.cljs","^K",8,"^L",10,"^M",8,"^N",17],"~:tag","~$any"],"~$Provider",["^ ","^<","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react/Provider","^J","resources/public/js/compiled/dev/day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/react.cljs","^K",9,"^L",1,"^M",9,"^N",18,"^O",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/react.cljs","^K",9,"^L",10,"^M",9,"^N",18],"^P","^Q"],"~$provided-container",["^ ","~:protocol-inline",null,"^O",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/react.cljs","^K",11,"^L",8,"^M",11,"^N",26,"~:private",true,"~:arglists",["~#list",["~$quote",["^X",[[]]]]]],"^V",true,"^<","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react/provided-container","^J","resources/public/js/compiled/dev/day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/react.cljs","^N",26,"~:method-params",["^X",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^X",[null,null]],"^L",1,"~:variadic?",false,"^K",11,"~:ret-tag","^Q","^M",11,"~:max-fixed-arity",0,"~:fn-var",true,"^W",["^X",["^Y",["^X",[[]]]]]],"~$with-style-container",["^ ","^U",null,"^O",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/react.cljs","^K",24,"^L",7,"^M",24,"^N",27,"^W",["^X",["^Y",["^X",[["~$container","~$&","~$children"]]]]],"~:doc","Uses the provided IStyleContainer to render the styles of the children\n   elements. This is a reagent-style React component, meant to wrap whatever\n   part of your app needs to have its styled rendered elsewhere (often the\n   root of the app), eg:\n\n     [with-style-container container\n      [your-view]]\n\n   Note that behavior in the presence of a reactively changing `container` is\n   undefined. You should expect to declare one container per render.","~:top-fn",["^ ","^12",true,"~:fixed-arity",1,"^14",1,"^[",[["^X",["^17","^18"]]],"^W",["^X",[["^17","~$&","^18"]]],"^11",["^X",[null]]]],"^<","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react/with-style-container","^J","resources/public/js/compiled/dev/day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/react.cljs","^N",27,"^1:",["^ ","^12",true,"^1;",1,"^14",1,"^[",[["^X",["^17","^18"]]],"^W",["^X",[["^17","~$&","^18"]]],"^11",["^X",[null]]],"^[",[["^X",["^17","^18"]]],"^10",null,"^1;",1,"^11",["^X",[null]],"^L",1,"^12",true,"~:methods",[["^ ","^1;",1,"^12",true,"^P",["^;",[null,"~$clj","^Q"]]]],"^K",24,"^13","^Q","^M",24,"^14",1,"^15",true,"^W",["^X",[["^17","~$&","^18"]]],"^19","Uses the provided IStyleContainer to render the styles of the children\n   elements. This is a reagent-style React component, meant to wrap whatever\n   part of your app needs to have its styled rendered elsewhere (often the\n   root of the app), eg:\n\n     [with-style-container container\n      [your-view]]\n\n   Note that behavior in the presence of a reactively changing `container` is\n   undefined. You should expect to declare one container per render."],"~$with-dom",["^ ","^U",null,"^O",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/react.cljs","^K",39,"^L",7,"^M",39,"^N",15,"^W",["^X",["^Y",["^X",[["~$get-dom-target","~$&","~$_children"]]]]],"^19","A convenience for rendering Spade styles into an alternate dom target.\n   The first argument may either be an actual DOM element, or a function which\n   returns one.\n\n   See `with-style-container`, which this uses under the hood.","^1:",["^ ","^12",true,"^1;",1,"^14",1,"^[",[["^X",["^1@","^1A"]]],"^W",["^X",[["^1@","~$&","^1A"]]],"^11",["^X",[null]]]],"^<","~$day8.re-frame-10x.inlined-deps.spade.git-sha-93ef290.react/with-dom","^J","resources/public/js/compiled/dev/day8/re_frame_10x/inlined_deps/spade/git_sha_93ef290/react.cljs","^N",15,"^1:",["^ ","^12",true,"^1;",1,"^14",1,"^[",[["^X",["^1@","^1A"]]],"^W",["^X",[["^1@","~$&","^1A"]]],"^11",["^X",[null]]],"^[",[["^X",["^1@","^1A"]]],"^10",null,"^1;",1,"^11",["^X",[null]],"^L",1,"^12",true,"^1=",[["^ ","^1;",1,"^12",true,"^P","~$function"]],"^K",39,"^13","^Q","^M",39,"^14",1,"^15",true,"^W",["^X",[["^1@","~$&","^1A"]]],"^19","A convenience for rendering Spade styles into an alternate dom target.\n   The first argument may either be an actual DOM element, or a function which\n   returns one.\n\n   See `with-style-container`, which this uses under the hood."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^;",["~:>","~:value"]],"~:order",["~:>","^1H"]],"^19",null]