["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.fn","~:imports",null,"~:requires",["^ ","~$node","~$rewrite-clj.node.protocols","^:","^:","~$w","~$clojure.walk","^;","^;"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$construct-fn",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","~:line",7,"~:column",8,"~:end-line",7,"~:end-column",20,"~:private",true,"~:arglists",["~#list",["~$quote",["^I",[["~$syms","~$vararg","~$body"]]]]],"~:doc","Construct function form."],"^G",true,"^5","~$rewrite-clj.node.fn/construct-fn","^B","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",20,"~:method-params",["^I",[["^K","^L","^M"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^D",1,"~:variadic?",false,"^C",7,"~:ret-tag","~$cljs.core/List","^E",7,"~:max-fixed-arity",3,"~:fn-var",true,"^H",["^I",["^J",["^I",[["^K","^L","^M"]]]]],"^N","Construct function form."],"~$sym-index",["^ ","^@",null,"^A",["^ ","^B","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^C",19,"^D",8,"^E",19,"^F",17,"^G",true,"^H",["^I",["^J",["^I",[["~$n"]]]]],"^N","Get index based on the substring following the parameter's `%`.\n   Zero means vararg."],"^G",true,"^5","~$rewrite-clj.node.fn/sym-index","^B","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",17,"^P",["^I",[["~$n"]]],"^Q",null,"^R",["^I",[null,null]],"^D",1,"^S",false,"^C",19,"^T",["^4",["~$js","~$number"]],"^E",19,"^V",1,"^W",true,"^H",["^I",["^J",["^I",[["~$n"]]]]],"^N","Get index based on the substring following the parameter's `%`.\n   Zero means vararg."],"~$symbol->gensym",["^ ","^@",null,"^A",["^ ","^B","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^C",29,"^D",8,"^E",29,"^F",22,"^G",true,"^H",["^I",["^J",["^I",[["~$sym-seq","~$vararg?","~$max-n","~$sym"]]]]],"^N","If symbol starting with `%`, convert to respective gensym."],"^G",true,"^5","~$rewrite-clj.node.fn/symbol->gensym","^B","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",22,"^P",["^I",[["^11","^12","^13","^14"]]],"^Q",null,"^R",["^I",[null,null]],"^D",1,"^S",false,"^C",29,"^T",["^4",["~$any","~$clj-nil"]],"^E",29,"^V",4,"^W",true,"^H",["^I",["^J",["^I",[["^11","^12","^13","^14"]]]]],"^N","If symbol starting with `%`, convert to respective gensym."],"~$fn-walk",["^ ","^@",null,"^A",["^ ","^B","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^C",42,"^D",8,"^E",42,"^F",15,"^G",true,"^H",["^I",["^J",["^I",[["~$form"]]]]],"^N","Walk the form and create an expand function form."],"^G",true,"^5","~$rewrite-clj.node.fn/fn-walk","^B","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",15,"^P",["^I",[["^19"]]],"^Q",null,"^R",["^I",[null,null]],"^D",1,"^S",false,"^C",42,"^T","^U","^E",42,"^V",1,"^W",true,"^H",["^I",["^J",["^I",[["^19"]]]]],"^N","Walk the form and create an expand function form."],"~$FnNode",["^ ","~:num-fields",1,"~:protocols",["^4",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$rewrite-clj.node.protocols/InnerNode","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.fn/Object","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^5","~$rewrite-clj.node.fn/FnNode","^B","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",18,"~:type",true,"^D",12,"~:internal-ctor",true,"^C",65,"~:record",true,"^E",65,"~:tag","~$function","~:skip-protocol-flag",["^4",["^1>","^1?","^1@","^1A","^1B","^1C","^1E","^1F","^1G","^1H","^1I","^1L","^1M","^1N","^1O"]]],"~$->FnNode",["^ ","^@",null,"^A",["^ ","^B","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",18,"^D",12,"^1R",true,"~:factory","~:positional","^C",65,"^E",65,"^H",["^I",["^J",["^I",[["~$children"]]]]],"^N","Positional factory function for rewrite-clj.node.fn/FnNode."],"^5","~$rewrite-clj.node.fn/->FnNode","^B","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",18,"^P",["^I",[["^1Z"]]],"^Q",null,"^R",["^I",[null,null]],"^D",1,"^1R",true,"^S",false,"^1X","^1Y","^C",65,"^T","^1P","^E",65,"^V",1,"^W",true,"^H",["^I",["^J",["^I",[["^1Z"]]]]],"^N","Positional factory function for rewrite-clj.node.fn/FnNode."],"~$map->FnNode",["^ ","^@",null,"^A",["^ ","^B","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",18,"^D",12,"^1R",true,"^1X","~:map","^C",65,"^E",65,"^H",["^I",["^J",["^I",[["~$G__35496"]]]]],"^N","Factory function for rewrite-clj.node.fn/FnNode, taking a map of keywords to field values."],"^5","~$rewrite-clj.node.fn/map->FnNode","^B","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",18,"^P",["^I",[["^22"]]],"^Q",null,"^R",["^I",[null,null]],"^D",1,"^1R",true,"^S",false,"^1X","^21","^C",65,"^T","^1P","^E",65,"^V",1,"^W",true,"^H",["^I",["^J",["^I",[["^22"]]]]],"^N","Factory function for rewrite-clj.node.fn/FnNode, taking a map of keywords to field values."],"~$fn-node",["^ ","^@",null,"^A",["^ ","^B","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^C",94,"^D",7,"^E",94,"^F",14,"^H",["^I",["^J",["^I",[["^1Z"]]]]],"^N","Create node representing an anonymous function."],"^5","~$rewrite-clj.node.fn/fn-node","^B","resources/public/js/compiled/dev/rewrite_clj/node/fn.cljs","^F",14,"^P",["^I",[["^1Z"]]],"^Q",null,"^R",["^I",[null,null]],"^D",1,"^S",false,"^C",94,"^T","^1P","^E",94,"^V",1,"^W",true,"^H",["^I",["^J",["^I",[["^1Z"]]]]],"^N","Create node representing an anonymous function."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~$&","~:children","~:fn","~:else","^1Z","~$fn*"]],"~:order",["^2=","~$&","^2<","^2:","^2;","^1Z"]],"^N",null]