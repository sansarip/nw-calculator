["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$have","~$taoensso.encore","~$have?","^4","~$deprecated","^4"],"~:excludes",["~#set",[]],"~:name","~$taoensso.timbre.appenders.core","~:imports",null,"~:requires",["^ ","~$str","~$clojure.string","^>","^>","~$enc","^4","^4","^4"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$println-appender",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/taoensso/timbre/appenders/core.cljc","~:line",33,"~:column",7,"~:end-line",33,"~:end-column",23,"~:arglists",["~#list",["~$quote",["^L",[["~$&",["~$_opts"]]]]]],"~:doc","Returns a simple `println` appender for Clojure/Script.\n  Use with ClojureScript requires that `cljs.core/*print-fn*` be set.\n\n  :stream (clj only) - e/o #{:auto :*out* :*err* :std-err :std-out <io-stream>}.","~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",0,"~:max-fixed-arity",0,"~:method-params",[["^L",[["^N"]]]],"^K",["^L",[["~$&",["^N"]]]],"~:arglists-meta",["^L",[null]]]],"^9","~$taoensso.timbre.appenders.core/println-appender","^F","resources/public/js/compiled/dev/taoensso/timbre/appenders/core.cljc","^J",23,"^P",["^ ","^Q",true,"^R",0,"^S",0,"^T",[["^L",[["^N"]]]],"^K",["^L",[["~$&",["^N"]]]],"^U",["^L",[null]]],"^T",[["^L",[["^N"]]]],"~:protocol-impl",null,"^R",0,"^U",["^L",[null]],"^H",1,"^Q",true,"~:methods",[["^ ","^R",0,"^Q",true,"~:tag","~$cljs.core/IMap"]],"^G",33,"~:ret-tag","~$any","^I",33,"^S",0,"~:fn-var",true,"^K",["^L",[["~$&",["^N"]]]],"^O","Returns a simple `println` appender for Clojure/Script.\n  Use with ClojureScript requires that `cljs.core/*print-fn*` be set.\n\n  :stream (clj only) - e/o #{:auto :*out* :*err* :std-err :std-out <io-stream>}."],"~$console-appender",["^ ","^D",null,"^E",["^ ","^F","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/taoensso/timbre/appenders/core.cljc","^G",116,"^H",10,"^I",116,"^J",26,"^K",["^L",["^M",["^L",[["~$&",["~$opts"]]]]]],"^O","Returns a simple js/console appender for ClojureScript.\n\n     Use ^:meta {:raw-console? true} as first argument to logging call if\n     you want args sent to console in a raw format enabling console-based\n     pretty-printing of JS objects, etc. E.g.:\n\n       (info                             my-js-obj) ; Send string   to console\n       (info ^:meta {:raw-console? true} my-js-obj) ; Send raw args to console\n\n     For accurate line numbers in Chrome, add these Blackbox[1] patterns:\n       `/taoensso/timbre/appenders/core\\.js$`\n       `/taoensso/timbre\\.js$`\n       `/cljs/core\\.js$`\n\n     [1] Ref. https://goo.gl/ZejSvR","^P",["^ ","^Q",true,"^R",0,"^S",0,"^T",[["^L",[["^13"]]]],"^K",["^L",[["~$&",["^13"]]]],"^U",["^L",[null]]]],"^9","~$taoensso.timbre.appenders.core/console-appender","^F","resources/public/js/compiled/dev/taoensso/timbre/appenders/core.cljc","^J",26,"^P",["^ ","^Q",true,"^R",0,"^S",0,"^T",[["^L",[["^13"]]]],"^K",["^L",[["~$&",["^13"]]]],"^U",["^L",[null]]],"^T",[["^L",[["^13"]]]],"^W",null,"^R",0,"^U",["^L",[null]],"^H",4,"^Q",true,"^X",[["^ ","^R",0,"^Q",true,"^Y","^Z"]],"^G",116,"^[","^10","^I",116,"^S",0,"^11",true,"^K",["^L",[["~$&",["^13"]]]],"^O","Returns a simple js/console appender for ClojureScript.\n\n     Use ^:meta {:raw-console? true} as first argument to logging call if\n     you want args sent to console in a raw format enabling console-based\n     pretty-printing of JS objects, etc. E.g.:\n\n       (info                             my-js-obj) ; Send string   to console\n       (info ^:meta {:raw-console? true} my-js-obj) ; Send raw args to console\n\n     For accurate line numbers in Chrome, add these Blackbox[1] patterns:\n       `/taoensso/timbre/appenders/core\\.js$`\n       `/taoensso/timbre\\.js$`\n       `/cljs/core\\.js$`\n\n     [1] Ref. https://goo.gl/ZejSvR"],"~$console-?appender",["^ ","^9","~$taoensso.timbre.appenders.core/console-?appender","^F","resources/public/js/compiled/dev/taoensso/timbre/appenders/core.cljc","^G",187,"^H",12,"^I",187,"^J",34,"^E",["^ ","^F","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/taoensso/timbre/appenders/core.cljc","^G",187,"^H",17,"^I",187,"^J",34],"^O","DEPRECATED"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$enc-macros","^4","^4","^4","^?","^4"],"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~:inherit","~:fn","~:rate-limit","~:vargs","~:output_","~:msg_","~:enabled?","~:level","~:output-fn","~:?err","~:min-level","~:raw-console?","~:?meta","~:async?"]],"~:order",["^1B","^1I","^1F","^1>","^1D","^1=","^1<","^1@","^1C","^1G","^1H","^1A","^1E","^1?"]],"^O","Core Timbre appenders without any special dependency requirements.\n  These can be aliased into the main Timbre ns for convenience."]