["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$find-ns","~$remove-ns","~$ns-publics","~$ns-resolve","~$ns-interns","~$all-ns","~$resolve"]],"~:name","~$cljs.analyzer.api","~:imports",null,"~:requires",["^ ","~$ana","~$cljs.analyzer","^A","^A","~$env","~$cljs.env","^C","^C"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$with-state",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","~:end-column",21,"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",1,"~:max-fixed-arity",1,"~:method-params",["~#list",[["^Q",["~$state","~$body"]]]],"~:arglists",["^Q",[["^R","~$&","^S"]]],"~:arglists-meta",["^Q",[null]]],"~:column",11,"~:line",51,"~:macro",true,"~:end-line",51,"^T",["^Q",["~$quote",["^Q",[["^R","~$&","^S"]]]]],"~:doc","Run the body with the given compilation state Atom<Map>."],"^<","~$cljs.analyzer.api/with-state","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",21,"^L",["^ ","^M",true,"^N",1,"^O",1,"^P",["^Q",[["^Q",["^R","^S"]]]],"^T",["^Q",[["^R","~$&","^S"]]],"^U",["^Q",[null]]],"^P",["^Q",[["^Q",["^R","^S"]]]],"~:protocol-impl",null,"^N",1,"^U",["^Q",[null]],"^V",1,"^M",true,"~:methods",[["^ ","^N",1,"^M",true,"~:tag",["^4",["~$seq","~$cljs.core/IList"]]]],"^W",51,"^X",true,"~:ret-tag","~$any","^Y",51,"^O",1,"~:fn-var",false,"^T",["^Q",[["^R","~$&","^S"]]],"^[","Run the body with the given compilation state Atom<Map>."],"^5",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",221,"^V",7,"^Y",221,"^K",14,"^T",["^Q",["^Z",["^Q",[["~$sym"],["^R","^19"]]]]],"^[","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.","^L",["^ ","^M",false,"^N",2,"^O",2,"^P",[["^19"],["^R","^19"]],"^T",["^Q",[["^19"],["^R","^19"]]],"^U",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/find-ns","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",14,"^L",["^ ","^M",false,"^N",2,"^O",2,"^P",[["^19"],["^R","^19"]],"^T",["^Q",[["^19"],["^R","^19"]]],"^U",["^Q",[null,null]]],"^P",[["^19"],["^R","^19"]],"^11",null,"^N",2,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^12",[["^ ","^N",1,"^M",false,"^13","^17"],["^ ","^N",2,"^M",false,"^13",["^4",[null,"^17"]]]],"^W",221,"^Y",221,"^O",2,"^18",true,"^T",["^Q",[["^19"],["^R","^19"]]],"^[","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns."],"^6",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",263,"^V",7,"^Y",263,"^K",16,"^T",["^Q",["^Z",["^Q",[["~$ns"],["^R","^1;"]]]]],"^[","Removes the namespace named by the symbol.","^L",["^ ","^M",false,"^N",2,"^O",2,"^P",[["^1;"],["^R","^1;"]],"^T",["^Q",[["^1;"],["^R","^1;"]]],"^U",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/remove-ns","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",16,"^L",["^ ","^M",false,"^N",2,"^O",2,"^P",[["^1;"],["^R","^1;"]],"^T",["^Q",[["^1;"],["^R","^1;"]]],"^U",["^Q",[null,null]]],"^P",[["^1;"],["^R","^1;"]],"^11",null,"^N",2,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^12",[["^ ","^N",1,"^M",false,"^13","^17"],["^ ","^N",2,"^M",false,"^13",["^4",[null,"^17"]]]],"^W",263,"^Y",263,"^O",2,"^18",true,"^T",["^Q",[["^1;"],["^R","^1;"]]],"^[","Removes the namespace named by the symbol."],"^7",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",241,"^V",7,"^Y",241,"^K",17,"^T",["^Q",["^Z",["^Q",[["^1;"],["^R","^1;"]]]]],"^[","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.","^L",["^ ","^M",false,"^N",2,"^O",2,"^P",[["^1;"],["^R","^1;"]],"^T",["^Q",[["^1;"],["^R","^1;"]]],"^U",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/ns-publics","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",17,"^L",["^ ","^M",false,"^N",2,"^O",2,"^P",[["^1;"],["^R","^1;"]],"^T",["^Q",[["^1;"],["^R","^1;"]]],"^U",["^Q",[null,null]]],"^P",[["^1;"],["^R","^1;"]],"^11",null,"^N",2,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^12",[["^ ","^N",1,"^M",false,"^13","^17"],["^ ","^N",2,"^M",false,"^13",["^4",[null,"~$clj","^17"]]]],"^W",241,"^Y",241,"^O",2,"^18",true,"^T",["^Q",[["^1;"],["^R","^1;"]]],"^[","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars."],"~$get-options",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",102,"^V",7,"^Y",102,"^K",18,"^T",["^Q",["^Z",["^Q",[[],["^R"]]]]],"^[","Return the compiler options from compiler state.","^L",["^ ","^M",false,"^N",1,"^O",1,"^P",[[],["^R"]],"^T",["^Q",[[],["^R"]]],"^U",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/get-options","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",18,"^L",["^ ","^M",false,"^N",1,"^O",1,"^P",[[],["^R"]],"^T",["^Q",[[],["^R"]]],"^U",["^Q",[null,null]]],"^P",[[],["^R"]],"^11",null,"^N",1,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^12",[["^ ","^N",0,"^M",false,"^13","^17"],["^ ","^N",1,"^M",false,"^13",["^4",["^17","~$clj-nil"]]]],"^W",102,"^Y",102,"^O",1,"^18",true,"^T",["^Q",[[],["^R"]]],"^[","Return the compiler options from compiler state."],"~$in-cljs-user",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",23,"^L",["^ ","^M",true,"^N",1,"^O",1,"^P",["^Q",[["^Q",["^B","^S"]]]],"^T",["^Q",[["^B","~$&","^S"]]],"^U",["^Q",[null]]],"^V",11,"^W",271,"^X",true,"^Y",271,"^T",["^Q",["^Z",["^Q",[["^B","~$&","^S"]]]]],"^[","Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\n  environment atom and runs body."],"^<","~$cljs.analyzer.api/in-cljs-user","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",23,"^L",["^ ","^M",true,"^N",1,"^O",1,"^P",["^Q",[["^Q",["^B","^S"]]]],"^T",["^Q",[["^B","~$&","^S"]]],"^U",["^Q",[null]]],"^P",["^Q",[["^Q",["^B","^S"]]]],"^11",null,"^N",1,"^U",["^Q",[null]],"^V",1,"^M",true,"^12",[["^ ","^N",1,"^M",true,"^13",["^4",["^14","^15"]]]],"^W",271,"^X",true,"^16","^17","^Y",271,"^O",1,"^18",false,"^T",["^Q",[["^B","~$&","^S"]]],"^[","Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\n  environment atom and runs body."],"~$warning-message",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",91,"^V",7,"^Y",91,"^K",22,"^T",["^Q",["^Z",["^Q",[["~$warn-type","~$warn-info"]]]]],"^[","Helper for generating the standard analyzer messages for warnings. Should be\n  passed warn-type and warn-info. See with-warning-handlers."],"^<","~$cljs.analyzer.api/warning-message","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",22,"^P",["^Q",[["^1E","^1F"]]],"^11",null,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^W",91,"^16","^17","^Y",91,"^O",2,"^18",true,"^T",["^Q",["^Z",["^Q",[["^1E","^1F"]]]]],"^[","Helper for generating the standard analyzer messages for warnings. Should be\n  passed warn-type and warn-info. See with-warning-handlers."],"~$with-warning-handlers",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",32,"^L",["^ ","^M",true,"^N",1,"^O",1,"^P",["^Q",[["^Q",["~$handlers","^S"]]]],"^T",["^Q",[["^1I","~$&","^S"]]],"^U",["^Q",[null]]],"^V",11,"^W",81,"^X",true,"^Y",81,"^T",["^Q",["^Z",["^Q",[["^1I","~$&","^S"]]]]],"^[","Helper macro for custom handling of emitted warnings. Handlers should be\n   a vector of functions. The signature of these functions is\n   [warn-type env warn-info]. warn-type is a keyword describing the warning,\n   env is the analysis environment, and warn-info is a map of extra useful\n   information for a particular warning type."],"^<","~$cljs.analyzer.api/with-warning-handlers","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",32,"^L",["^ ","^M",true,"^N",1,"^O",1,"^P",["^Q",[["^Q",["^1I","^S"]]]],"^T",["^Q",[["^1I","~$&","^S"]]],"^U",["^Q",[null]]],"^P",["^Q",[["^Q",["^1I","^S"]]]],"^11",null,"^N",1,"^U",["^Q",[null]],"^V",1,"^M",true,"^12",[["^ ","^N",1,"^M",true,"^13",["^4",["^14","^15"]]]],"^W",81,"^X",true,"^16","^17","^Y",81,"^O",1,"^18",false,"^T",["^Q",[["^1I","~$&","^S"]]],"^[","Helper macro for custom handling of emitted warnings. Handlers should be\n   a vector of functions. The signature of these functions is\n   [warn-type env warn-info]. warn-type is a keyword describing the warning,\n   env is the analysis environment, and warn-info is a map of extra useful\n   information for a particular warning type."],"~$warning-enabled?",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",69,"^V",7,"^Y",69,"^K",23,"^T",["^Q",["^Z",["^Q",[["~$warning-type"]]]]],"^[","Test if the given warning-type is enabled."],"^<","~$cljs.analyzer.api/warning-enabled?","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",23,"^P",["^Q",[["^1L"]]],"^11",null,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^W",69,"^16","^17","^Y",69,"^O",1,"^18",true,"^T",["^Q",["^Z",["^Q",[["^1L"]]]]],"^[","Test if the given warning-type is enabled."],"~$current-state",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",36,"^V",7,"^Y",36,"^K",20,"^T",["^Q",["^Z",["^Q",[[]]]]],"^[","Return the current compiler state atom."],"^<","~$cljs.analyzer.api/current-state","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",20,"^P",["^Q",[[]]],"^11",null,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^W",36,"^16","^17","^Y",36,"^O",0,"^18",true,"^T",["^Q",["^Z",["^Q",[[]]]]],"^[","Return the current compiler state atom."],"^8",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",254,"^V",7,"^Y",254,"^K",17,"^T",["^Q",["^Z",["^Q",[["^1;","^19"],["^R","^1;","^19"]]]]],"^[","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.","^L",["^ ","^M",false,"^N",3,"^O",3,"^P",[["^1;","^19"],["^R","^1;","^19"]],"^T",["^Q",[["^1;","^19"],["^R","^1;","^19"]]],"^U",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/ns-resolve","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",17,"^L",["^ ","^M",false,"^N",3,"^O",3,"^P",[["^1;","^19"],["^R","^1;","^19"]],"^T",["^Q",[["^1;","^19"],["^R","^1;","^19"]]],"^U",["^Q",[null,null]]],"^P",[["^1;","^19"],["^R","^1;","^19"]],"^11",null,"^N",3,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^12",[["^ ","^N",2,"^M",false,"^13","^17"],["^ ","^N",3,"^M",false,"^13",["^4",[null,"^17"]]]],"^W",254,"^Y",254,"^O",3,"^18",true,"^T",["^Q",[["^1;","^19"],["^R","^1;","^19"]]],"^[","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var."],"~$enabled-warnings",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",97,"^V",7,"^Y",97,"^K",23,"^T",["^Q",["^Z",["^Q",[[]]]]],"^[","Get the enabled warning types."],"^<","~$cljs.analyzer.api/enabled-warnings","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",23,"^P",["^Q",[[]]],"^11",null,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^W",97,"^16","^17","^Y",97,"^O",0,"^18",true,"^T",["^Q",["^Z",["^Q",[[]]]]],"^[","Get the enabled warning types."],"~$empty-state",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",25,"^V",7,"^Y",25,"^K",18,"^T",["^Q",["^Z",["^Q",[[],["~$opts"]]]]],"^[","Creates an empty compilation state Atom<Map>. The optional opts arg is a map\n   representing the compiler configuration. See the documentation\n   for details: https://clojurescript.org/reference/compiler-options","^L",["^ ","^M",false,"^N",1,"^O",1,"^P",[[],["^1T"]],"^T",["^Q",[[],["^1T"]]],"^U",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/empty-state","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",18,"^L",["^ ","^M",false,"^N",1,"^O",1,"^P",[[],["^1T"]],"^T",["^Q",[[],["^1T"]]],"^U",["^Q",[null,null]]],"^P",[[],["^1T"]],"^11",null,"^N",1,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^12",[["^ ","^N",0,"^M",false,"^13","^17"],["^ ","^N",1,"^M",false,"^13","~$cljs.core/Atom"]],"^W",25,"^Y",25,"^O",1,"^18",true,"^T",["^Q",[[],["^1T"]]],"^[","Creates an empty compilation state Atom<Map>. The optional opts arg is a map\n   representing the compiler configuration. See the documentation\n   for details: https://clojurescript.org/reference/compiler-options"],"~$default-passes",["^ ","^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",117,"^V",3,"^Y",117,"^K",17,"^[","ClojureScript's default analysis passes."],"^<","~$cljs.analyzer.api/default-passes","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",17,"^V",1,"^W",115,"^Y",117,"^13","~$cljs.core/IVector","^[","ClojureScript's default analysis passes."],"~$no-warn",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",18,"^L",["^ ","^M",true,"^N",0,"^O",0,"^P",["^Q",[["^Q",["^S"]]]],"^T",["^Q",[["~$&","^S"]]],"^U",["^Q",[null]]],"^V",11,"^W",62,"^X",true,"^Y",62,"^T",["^Q",["^Z",["^Q",[["~$&","^S"]]]]],"^[","Disable analyzer warnings for any analysis executed in body."],"^<","~$cljs.analyzer.api/no-warn","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",18,"^L",["^ ","^M",true,"^N",0,"^O",0,"^P",["^Q",[["^Q",["^S"]]]],"^T",["^Q",[["~$&","^S"]]],"^U",["^Q",[null]]],"^P",["^Q",[["^Q",["^S"]]]],"^11",null,"^N",0,"^U",["^Q",[null]],"^V",1,"^M",true,"^12",[["^ ","^N",0,"^M",true,"^13",["^4",["^14","^15"]]]],"^W",62,"^X",true,"^16","^17","^Y",62,"^O",0,"^18",false,"^T",["^Q",[["~$&","^S"]]],"^[","Disable analyzer warnings for any analysis executed in body."],"~$empty-env",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",57,"^V",7,"^Y",57,"^K",16,"^T",["^Q",["^Z",["^Q",[[]]]]],"^[","Creates an empty analysis environment."],"^<","~$cljs.analyzer.api/empty-env","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",16,"^P",["^Q",[[]]],"^11",null,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^W",57,"^16","^17","^Y",57,"^O",0,"^18",true,"^T",["^Q",["^Z",["^Q",[[]]]]],"^[","Creates an empty analysis environment."],"~$default-warning-handler",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",74,"^V",7,"^Y",74,"^K",30,"^T",["^Q",["^Z",["^Q",[["^1L","^B","~$extra"]]]]],"^[","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^<","~$cljs.analyzer.api/default-warning-handler","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",30,"^P",["^Q",[["^1L","^B","^23"]]],"^11",null,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^W",74,"^16",["^4",[null,"^1A"]],"^Y",74,"^O",3,"^18",true,"^T",["^Q",["^Z",["^Q",[["^1L","^B","^23"]]]]],"^[","The default warning handler.\n\n   Outputs the warning messages to *err*."],"~$with-passes",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",22,"^L",["^ ","^M",true,"^N",1,"^O",1,"^P",["^Q",[["^Q",["~$passes","^S"]]]],"^T",["^Q",[["^26","~$&","^S"]]],"^U",["^Q",[null]]],"^V",11,"^W",119,"^X",true,"^Y",119,"^T",["^Q",["^Z",["^Q",[["^26","~$&","^S"]]]]],"^[","Evaluate the body with the provided sequence of compiler passes."],"^<","~$cljs.analyzer.api/with-passes","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",22,"^L",["^ ","^M",true,"^N",1,"^O",1,"^P",["^Q",[["^Q",["^26","^S"]]]],"^T",["^Q",[["^26","~$&","^S"]]],"^U",["^Q",[null]]],"^P",["^Q",[["^Q",["^26","^S"]]]],"^11",null,"^N",1,"^U",["^Q",[null]],"^V",1,"^M",true,"^12",[["^ ","^N",1,"^M",true,"^13",["^4",["^14","^15"]]]],"^W",119,"^X",true,"^16","^17","^Y",119,"^O",1,"^18",false,"^T",["^Q",[["^26","~$&","^S"]]],"^[","Evaluate the body with the provided sequence of compiler passes."],"^9",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",230,"^V",7,"^Y",230,"^K",17,"^T",["^Q",["^Z",["^Q",[["^1;"],["^R","^1;"]]]]],"^[","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.","^L",["^ ","^M",false,"^N",2,"^O",2,"^P",[["^1;"],["^R","^1;"]],"^T",["^Q",[["^1;"],["^R","^1;"]]],"^U",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/ns-interns","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",17,"^L",["^ ","^M",false,"^N",2,"^O",2,"^P",[["^1;"],["^R","^1;"]],"^T",["^Q",[["^1;"],["^R","^1;"]]],"^U",["^Q",[null,null]]],"^P",[["^1;"],["^R","^1;"]],"^11",null,"^N",2,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^12",[["^ ","^N",1,"^M",false,"^13","^17"],["^ ","^N",2,"^M",false,"^13",["^4",[null,"^17","^1A"]]]],"^W",230,"^Y",230,"^O",2,"^18",true,"^T",["^Q",[["^1;"],["^R","^1;"]]],"^[","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars."],"^:",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",213,"^V",7,"^Y",213,"^K",13,"^T",["^Q",["^Z",["^Q",[[],["^R"]]]]],"^[","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.","^L",["^ ","^M",false,"^N",1,"^O",1,"^P",[[],["^R"]],"^T",["^Q",[[],["^R"]]],"^U",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/all-ns","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",13,"^L",["^ ","^M",false,"^N",1,"^O",1,"^P",[[],["^R"]],"^T",["^Q",[[],["^R"]]],"^U",["^Q",[null,null]]],"^P",[[],["^R"]],"^11",null,"^N",1,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^12",[["^ ","^N",0,"^M",false,"^13","^17"],["^ ","^N",1,"^M",false,"^13",["^4",["~$cljs.core/KeySeq","^1A"]]]],"^W",213,"^Y",213,"^O",1,"^18",true,"^T",["^Q",[[],["^R"]]],"^[","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances."],"~$current-file",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",41,"^V",7,"^Y",41,"^K",19,"^T",["^Q",["^Z",["^Q",[[]]]]],"^[","Return the current file under analysis or compilation."],"^<","~$cljs.analyzer.api/current-file","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",19,"^P",["^Q",[[]]],"^11",null,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^W",41,"^16","^17","^Y",41,"^O",0,"^18",true,"^T",["^Q",["^Z",["^Q",[[]]]]],"^[","Return the current file under analysis or compilation."],"~$current-ns",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",46,"^V",7,"^Y",46,"^K",17,"^T",["^Q",["^Z",["^Q",[[]]]]],"^[","Return the current ns under analysis or compilation."],"^<","~$cljs.analyzer.api/current-ns","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",17,"^P",["^Q",[[]]],"^11",null,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^W",46,"^16","^17","^Y",46,"^O",0,"^18",true,"^T",["^Q",["^Z",["^Q",[[]]]]],"^[","Return the current ns under analysis or compilation."],"^;",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",201,"^V",7,"^Y",201,"^K",14,"^T",["^Q",["^Z",["^Q",[["^B","^19"]]]]],"^[","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"^<","~$cljs.analyzer.api/resolve","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",14,"^P",["^Q",[["^B","^19"]]],"^11",null,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^W",201,"^Y",201,"^O",2,"^18",true,"^T",["^Q",["^Z",["^Q",[["^B","^19"]]]]],"^[","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"~$get-js-index",["^ ","^H",null,"^I",["^ ","^J","/Users/sansarip/Dev/nw-calculator/resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^W",108,"^V",7,"^Y",108,"^K",19,"^T",["^Q",["^Z",["^Q",[[],["^R"]]]]],"^[","Return the currently computed Google Closure js dependency index from the\n  compiler state.","^L",["^ ","^M",false,"^N",1,"^O",1,"^P",[[],["^R"]],"^T",["^Q",[[],["^R"]]],"^U",["^Q",[null,null]]]],"^<","~$cljs.analyzer.api/get-js-index","^J","resources/public/js/compiled/dev/cljs/analyzer/api.cljc","^K",19,"^L",["^ ","^M",false,"^N",1,"^O",1,"^P",[[],["^R"]],"^T",["^Q",[[],["^R"]]],"^U",["^Q",[null,null]]],"^P",[[],["^R"]],"^11",null,"^N",1,"^U",["^Q",[null,null]],"^V",1,"^M",false,"^12",[["^ ","^N",0,"^M",false,"^13","^17"],["^ ","^N",1,"^M",false,"^13",["^4",["^17","^1A"]]]],"^W",108,"^Y",108,"^O",1,"^18",true,"^T",["^Q",[[],["^R"]]],"^[","Return the currently computed Google Closure js dependency index from the\n  compiler state."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:cljs.analyzer/namespaces","~$cljs.core/binding","~$cljs.analyzer/with-warning-handlers","~:private","~:macros","~:js-dependency-index","~$cljs.analyzer/*cljs-warnings*","^F","~$cljs.env/with-compiler-env","~:options","^Z","~$cljs.analyzer/*passes*","~$cljs.analyzer/*cljs-ns*","~$cljs.user"]],"~:order",["^2M","^2G","^2L","^2H","^2N","^2K","^2O","^2F","^2J","^F","^2I","^2P","^Z","^2Q"]],"^[","This is intended to be a stable api for those who need programmatic access\n  to the analyzer."]